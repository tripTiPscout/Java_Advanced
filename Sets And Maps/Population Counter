package Advanced;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedHashMap;
import java.util.Map;

public class PopulationCounter  {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        Map<String, Map<String, Long>> countriesStats = new LinkedHashMap<>();

        String inputLine = reader.readLine();

        while (!inputLine.equals("report")) {
            String[] inputData = inputLine.split("\\|");

            String city = inputData[0];
            String country = inputData[1];
            long population = Long.parseLong(inputData[2]);

            if (!countriesStats.containsKey(country)) {
                countriesStats.put(country, new LinkedHashMap<>());
            }
            countriesStats.get(country).put(city, population);

            inputLine = reader.readLine();
        }

        countriesStats.entrySet().stream()
                .sorted((country1, country2) -> country2.getValue().values().stream().reduce(0L, Long::sum)
                        .compareTo(country1.getValue().values().stream().reduce(0L, Long::sum)))
                .forEach(country -> {
                    System.out.printf("%s (total population: %d)%n", country.getKey(),
                            country.getValue().values().stream().reduce(0L, Long::sum));
                    country.getValue().entrySet().stream()
                            .sorted((city1, city2) -> city2.getValue().compareTo(city1.getValue()))
                            .forEach(city -> System.out.printf("=>%s: %d%n", city.getKey(), city.getValue()));
                });
    }
}
