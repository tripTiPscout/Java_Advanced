package Advanced;

import java.io.File;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Objects;

public class Main {

    public static int foldersCount = 0;

    public static void main(String[] args) {

        String inputPath = "C:/Users/User/Desktop";

        File file = new File(inputPath);

        //dfs(file);

        Deque<File> dirs = new ArrayDeque<>();
        dirs.offer(file);

        while (!dirs.isEmpty()) {

            File current = dirs.poll();

            File[] nestedFiles = current.listFiles();

            assert nestedFiles != null;
            for (File nestedFile : nestedFiles) {

                if (nestedFile.isDirectory()) {

                    dirs.offer(nestedFile);
                }
            }
            foldersCount++;

            System.out.println(current.getName());
        }
        
        System.out.println(foldersCount + " folders");
    }

    public static void dfs(File file) {
        foldersCount++;

        for (File f : Objects.requireNonNull(file.listFiles())) {
            if (f.isDirectory()) {
                dfs(f);
            }
        }
        System.out.println(file.getName());
    }
}
